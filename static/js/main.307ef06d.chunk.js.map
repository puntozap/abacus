{"version":3,"sources":["logo.svg","formData/formData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","React","Component","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","MyPrevious","state","value1","value2","search","e","console","log","todos","previous","finalText","calification","percentage","react_default","a","createElement","Row","Col","lg","className","x","dato","lastNote","todo2","ok","bind","assertThisInitialized","_this2","Container","js_default","maxValue","minValue","value","onChange","setState","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.307ef06d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Button, Container, Col, Input, Row, Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport InputRange from 'react-input-range';\r\nimport 'react-input-range/lib/css/index.css';\r\n\r\nclass FormData extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n \r\n        this.state = { value: 10 };\r\n    }\r\n    render() {\r\n        // console.log(this.props.numbertext,\"xxxx\");\r\n        return (\r\n            <Card >\r\n                <CardBody>\r\n                    <form className=\"card-body\" onSubmit={this.props.search}>\r\n                        <CardTitle><strong>Abaco de Notas</strong></CardTitle>\r\n                        <Input type=\"number\" className=\"text-center border-0 display-4 \" placeholder=\"Toca para Ingresar nota Previa. Ej: 15\" title=\" rango de Numeros a ingresar del 10 al 20\" id=\"hola\" name=\"previous\" min=\"0\" max=\"20\" onChange={this.props.change} value={this.props.numbertext} />\r\n                        <Input type=\"number\" className=\"text-center border-0 display-4 \" placeholder=\"Toca para Ingresar nota Previa. Ej: 15\" title=\" rango de Numeros a ingresar del 10 al 20\" id=\"hola\" name=\"lastNote\" min=\"0\" max=\"20\" onChange={this.props.change} value={this.props.numbertext} />\r\n                        <InputRange\r\n                            maxValue={20}\r\n                            minValue={10}\r\n                            type=\"number\"\r\n                            value={this.state.value}\r\n                            onChange={value => this.setState({ value })} />\r\n\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default FormData;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport x from './abacus.json';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport FormData from './formData/formData';\r\n\r\nimport { Button, Container, Col, Input, Row, Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport InputRange from 'react-input-range';\r\nimport 'react-input-range/lib/css/index.css';\r\n// import {abacus} from './abacus.json';\r\nvar veamos = \"\";\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: x,\r\n      dato: \"\",\r\n      previous: \"\",\r\n      lastNote: \"\",\r\n      todo2: \"\",\r\n      value1: 10,\r\n      value2: 0,\r\n      ok: 0\r\n    }\r\n\r\n    this.search = this.search.bind(this);\r\n    this.MyPrevious = this.MyPrevious.bind(this);\r\n    console.log(this.state.todos)\r\n  }\r\n  MyPrevious = () => {\r\n    const previous = this.state.value1;\r\n    const finalText = this.state.value2;\r\n\r\n\r\n  }\r\n\r\n  search = e => {\r\n    console.log(this.state.value1, this.state.value2, this.state.todos[this.state.value1][this.state.value2])\r\n    const previous = this.state.value1;\r\n    const finalText = this.state.value2;\r\n    const calification = this.state.todos[previous][finalText];\r\n    const percentage = this.state.todos[previous]['percentage'];\r\n    return (\r\n      <Row>\r\n\r\n        <Col lg={12} className={calification <= 9 ? 'bg-dark text-white p-1 rounded mr-1 ml-1' : calification == 21 ? 'bg-success text-white p-1 rounded mr-1 ml-1' : 'bg-primary text-white p-1 rounded'}>\r\n          <p className=\"display-3\"><span className=\"fz-16\">Mi definitiva es de </span>{calification < 10 ? '0' + calification : calification}<span className=\"fz-16\"> puntos</span></p>\r\n          <p className=\"h2\">{calification < 10 ? 'üòî Reprobado' : calification>=10 && calification<=12?'üòÉ Aprobado':calification>=13 && calification<=16?'üòÅ Aprobado':calification==17?'üòÜ Aprobado': calification==18?'üòÖ Aprobado':'üòú Aprobado'}</p>\r\n          <p className=\"\">{calification < 10 ? 'Debes ir a reparaci√≥n üò≠' : 'Celebra con una cervezaüçªüï∫üèøüíÉüèΩ'}</p>\r\n          <p className=\"h4\">{percentage}% <span> de porcentaje aplicable</span></p>\r\n        </Col>\r\n      </Row >\r\n    );\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Container className=\"pt-5 pb-5\">\r\n          <Row>\r\n\r\n\r\n            <Col lg={12} >\r\n              <p className=\"h2\">üéìAbacus</p>\r\n            </Col>\r\n            <Col lg={6} className=\"pb-5 pt-2\">\r\n              <label className=\"h5 pb-3\">¬øCu√°l es mi nota previa? ü§î</label>\r\n              <InputRange\r\n                maxValue={20}\r\n                minValue={10}\r\n                value={this.state.value1}\r\n                onChange={value1 => this.setState({ value1 })} />\r\n              <Row>\r\n                <Col lg={12} className=\"bg-primary p-1 rounded mb-1 mt-5 mr-1 ml-1\">\r\n                  <p className=\"text-white display-3\"><span className=\"fz-16\">Llevo</span> {this.state.value1} <span className=\"fz-16\">Puntos nota previa</span></p>\r\n                  <p className=\"display-4\">{this.state.todos[this.state.value1]['percentage']==40?'üòÉ':this.state.todos[this.state.value1]['percentage']==60?'üòÅ':this.state.todos[this.state.value1]['percentage']==70?'üòÜ':this.state.todos[this.state.value1]['percentage']==80?'üòÖ':'üòú'}</p>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col lg={6} className=\"pb-5 pt-2\">\r\n              <label className=\"h5 pb-3\">¬øCu√°l es o ser√° mi nota final? ü§î</label>\r\n              <InputRange\r\n                maxValue={20}\r\n                minValue={0}\r\n                value={this.state.value2}\r\n                onChange={value2 => this.setState({ value2 })} />\r\n              <Row>\r\n                <Col lg={12} className={this.state.value2 < 10 ? 'bg-dark rounded p-1 mb-1 mt-5 ml-2 mr-1' : 'bg-primary rounded p-1 mb-1 mt-5 ml-2 mr-1'}><p className=\"text-white display-3\"><span className=\"fz-16\">Saqu√©</span> {this.state.value2 < 10 ? '0' + this.state.value2 : this.state.value2} <span className=\"fz-16\">{this.state.value2 == 1 ? 'Punto' : 'Puntos'} nota final</span></p><p className=\"display-4\">{this.state.value2 < 10 ? 'üòî' : this.state.todos[this.state.value2]['percentage']==40?'üòÉ':this.state.todos[this.state.value2]['percentage']==60?'üòÅ':this.state.todos[this.state.value2]['percentage']==70?'üòÜ':this.state.todos[this.state.value2]['percentage']==80?'üòÖ':'üòú'}</p></Col>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Col lg={12}>\r\n              <label className=\"h5 pb-3\">¬øCu√°l es o ser√° mi definitiva? ü§î</label>\r\n\r\n              {this.search()}\r\n\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}